#basic graphics
import turtle  

win = turtle.Screen()
win.title("Pong by Fatemeh Gorji") #title
win.bgcolor("black") #background color
win.setup(width=800, height=600)   #change size of window
win.tracer()  #stop windows to updating / speed up our game quite a bit

#score
score_a = 0
score_b = 0


#paddle A
paddle_a = turtle.Turtle()  #cap T is our class name / small t is our modoule
paddle_a.speed(0)  #speed of animation
paddle_a.shape("square")
paddle_a.color("white")
paddle_a.shapesize(stretch_wid=5, stretch_len=1)
paddle_a.penup()
paddle_a.goto(-350, 0) #start in there / (0,0) for middle


#paddle B
paddle_b = turtle.Turtle()  #cap T is our class name / small t is our modoule
paddle_b.speed(0)  #speed of animation
paddle_b.shape("square")
paddle_b.color("white")
paddle_b.shapesize(stretch_wid=5, stretch_len=1)
paddle_b.penup()
paddle_b.goto(350, 0) #start in there / (0,0) for middle


#ball
ball = turtle.Turtle()  #cap T is our class name / small t is our modoule
ball.speed(0)  #speed of animation
ball.shape("square")
ball.color("white")
ball.penup()
ball.goto(0, 0) #start in there / (0,0) for middle
#separate ball movement to x , y
ball.dx = 2  #d means delta or change / 2 work good by exowerince 
ball.dy = -2  #evry time ball move, move positive / y up to and x right to

#pen
pen = turtle.Turtle()
pen.speed(0)
pen.color("white")
pen.penup()
pen.hideturtle()
pen.goto(0, 260)
pen.write("player A: 0  player B: 0", align="center", font=("Courier", 24, "normal"))


# function
#we want paddle a and b up and down
def paddle_a_up():
    y = paddle_a.ycor() #ycor sa us y situation
    y += 20    #up in screen / add 20 px to ycor
    paddle_a.sety(y)

def paddle_a_down():
    y = paddle_a.ycor() #ycor sa us y situation
    y -= 20    #up in screen / add 20 px to ycor
    paddle_a.sety(y)

def paddle_b_up():
    y = paddle_b.ycor() #ycor sa us y situation
    y += 20    #up in screen / add 20 px to ycor
    paddle_b.sety(y)

def paddle_b_down():
    y = paddle_b.ycor() #ycor sa us y situation
    y -= 20    #up in screen / add 20 px to ycor
    paddle_b.sety(y)

#keyboard binding
win.listen()  #listen fo rkeyboard
win.onkeypress(paddle_a_up, "w") #when user press lower case "w" call the function
win.onkeypress(paddle_a_down, "s") 
win.onkeypress(paddle_b_up, "Up") #when user press lower case "w" call the function
win.onkeypress(paddle_b_down, "Down")

# Main game loop
while True:
    win.update()   #whatever loop dose, it's update screen

    #move the ball
    ball.setx(ball.xcor() + ball.dx) #first time 2 2 2, fly up screen
    ball.sety(ball.ycor() + ball.dy)

    #border checking
    if ball.ycor() > 290:
        ball.sety(290)  #set it back to 290
        ball.dy *= -1 #reverse the direction

    if ball.ycor() < -290:
        ball.sety(-290)  #set it back to 290
        ball.dy *= -1 #reverse the direction

    if ball.xcor() > 390:
        ball.goto(0, 0)
        ball.dx *= -1
        score_a += 1
        pen.clear()
        pen.write("player A: {}  player B: {}".format(score_a, score_b), align="center", font=("Courier", 24, "normal"))



    if ball.xcor() < -390:
        ball.goto(0, 0)
        ball.dx *= -1
        score_b = 1
        pen.clear()
        pen.write("player A: {}  player B: {}".format(score_a, score_b), align="center", font=("Courier", 24, "normal"))



    #paddle and ball collision
    if (ball.xcor() > 340 and ball.xcor() < 350) and (ball.ycor() < paddle_b.ycor() + 40 and ball.ycor() > paddle_b.ycor() - 40):
        ball.setx(340)
        ball.dx *= -1

    if (ball.xcor() < -340 and ball.xcor() > -350) and (ball.ycor() < paddle_a.ycor() + 40 and ball.ycor() > paddle_a.ycor() - 40):
        ball.setx(-340)
        ball.dx *= -1
